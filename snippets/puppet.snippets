# vim: nofoldenable foldmethod=manual
snippet file
	file {
	  "${1:filename}":
	    source  => "puppet:///${2:source}",
	    ensure  => ${3:file},
	    owner   => ${4:root},
	    group   => ${5:root},
	    mode    => ${6:0755},
	    notify  => Package["${7:name}"],
	    require => Package["${8:name}"];
	}
snippet exec
	exec {
	  "${1:name}":
	    command       => "${2:command}",
	    cwd		  => "${3:launch-path}",
	    user	  => root,
	    creates	  => "${4:bin}",
	    require	  => "[Package["${5:pkg}"],File["${6:file}"]]",
	    refreshonly   => "${7:true}",
	    onlyif        => "${8:run_if_true}",
	    unless        => "${9:run_if_false}";
	}
snippet package
	package {
	  "${1:package_name}":
	    ensure => ${2:installed};
	}
snippet service
	service {
	  "${1:name}":
	    ensure  => ${2:running},
	    require => Package["${3:name}"];
	}
snippet user
	user {
	  "${1:login}":
	    ensure  => ${2:present},
	    uid     => "${3:1001}",
	    git     => "${4:admin}",
	    shell   => "${5:/bin/zsh}",
	    home    => "/home/${6:login}",
	    managehome => ${7:true};
	}
snippet cron
	cron {
	  "${1:name}":
	    command => "${2:command}",
	    user    => ${3:root},
	    hour    => ${4:hour},
	    minute  => ${5:minute},
	    day     => ${6:day};
	}
snippet class
	# Class:: $1
	#
	#
	class ${1:classname} {
	  ${2:#code...}
	} # Class:: $1
snippet def
	# Define:: $1
	# Args:: $2
	#
	define ${1:defname}(${2:args}) {
	  ${3:#code}
	} # Define: $1
snippet inc
	include "${1}"
snippet #head
	# Module:: ${1:modulename}
	# Manifest:: ${2:init.pp}
	#
	# Author:: `system("git config user.name")` (<`system("git config user.email")`>)
	# Date:: `system("ruby -e 'puts Time.now'")`
	#
	${3}
